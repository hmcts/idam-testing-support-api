#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.AppPipelineDsl
env.NO_SKIP_IMG_BUILD = 'true'

def type = "java"
def product = "idam"
def component = "testing-support-api"
def expiresAfter = "3000-01-01"

def branchesToSync = ['demo', 'perftest', 'ithc', 'preview']

def secrets = [
  'idam-idam-${env}': [
    secret('idam-functional-test-service-client-secret', 'TESTING_SERVICE_CLIENT_SECRET')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

// docs:
// 1. https://github.com/hmcts/cnp-jenkins-library
// 2. https://hmcts.github.io/ways-of-working/common-pipeline/common-pipeline.html#common-pipeline
withPipeline(type, product, component) {
  loadVaultSecrets(secrets)
  enableSlackNotifications('#idam_tech')
  enableAksStagingDeployment()
  disableLegacyDeployment()
//  syncBranchesWithMaster(branchesToSync)
  expires(expiresAfter)

  before('functionalTest:preview') {
    env.PUBLIC_URL = 'https://idam-web-public.preview.platform.hmcts.net'
    env.TESTING_SUPPORT_API_URL = 'https://idam-testing-support-api.preview.platform.hmcts.net'
    env.TESTING_SERVICE_CLIENT = 'idam-functional-test-service'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}
            Using PUBLIC_URL: ${env.PUBLIC_URL}""".stripIndent()
  }

  before('functionalTest:aat') {
    env.PUBLIC_URL = 'https://idam-web-public.aat.platform.hmcts.net'
    env.TESTING_SUPPORT_API_URL = 'https://idam-testing-support-api.aat.platform.hmcts.net'
    env.TESTING_SERVICE_CLIENT = 'idam-functional-test-service'
    println """\
                Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}
                Using TESTING_SUPPORT_API_URL: ${env.TESTING_SUPPORT_API_URL}""".stripIndent()
  }

  afterAlways('functionalTest:preview') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/serenity/functional",
      reportFiles          : "index.html",
      reportName           : "IdAM Testing Support Functional Test Report"
    ]
  }

  afterAlways('functionalTest:aat') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/serenity/functional",
      reportFiles          : "index.html",
      reportName           : "IdAM Testing Support Functional Test Report"
    ]
  }

}
