#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.AppPipelineDsl
env.NONPROD_ENVIRONMENT_NAME = 'idam-aat'
env.PROD_ENVIRONMENT_NAME = 'idam-prod'
env.DEMO_ENVIRONMENT_NAME = 'idam-demo'
env.PREVIEW_ENVIRONMENT_NAME = 'idam-preview'
env.PERFTEST_ENVIRONMENT_NAME = 'idam-perftest'
env.ITHC_ENVIRONMENT_NAME = 'idam-ithc'
env.NO_SKIP_IMG_BUILD = 'true'

def type = "java"
def product = "idam"
def component = "testing-support-api"

def branchesToSync = ['demo', 'perftest', 'ithc']

// docs:
// 1. https://github.com/hmcts/cnp-jenkins-library
// 2. https://hmcts.github.io/ways-of-working/common-pipeline/common-pipeline.html#common-pipeline
withPipeline(type, product, component) {
  enableSlackNotifications('#idam_tech')
  enableAksStagingDeployment()
  disableLegacyDeployment()
  syncBranchesWithMaster(branchesToSync)

  before('akschartsinstall') {
    env.PREVIEW_ENVIRONMENT_NAME = 'preview'
    env.NONPROD_ENVIRONMENT_NAME = 'preview'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}""".stripIndent()
  }

  after('akschartsinstall') {
    env.PREVIEW_ENVIRONMENT_NAME = 'idam-preview'
    env.NONPROD_ENVIRONMENT_NAME = 'idam-aat'
    println """\
            Using PREVIEW_ENVIRONMENT_NAME: ${env.PREVIEW_ENVIRONMENT_NAME}
            Using NONPROD_ENVIRONMENT_NAME: ${env.NONPROD_ENVIRONMENT_NAME}""".stripIndent()
  }

}
