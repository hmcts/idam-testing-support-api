plugins {
  id 'application'
  id 'checkstyle'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.6.7'
  id 'org.owasp.dependencycheck' version '6.5.3'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'org.sonarqube' version '3.3'
  id "com.gorylenko.gradle-git-properties" version "2.4.0"
  id "org.flywaydb.flyway" version "8.5.5"
}

group = 'com.github.hmcts'
version = '0.0.1'

allprojects {
  sourceCompatibility = '11'
  targetCompatibility = '11'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
  checkstyleTest.enabled = false
}

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "HMCTS :: idam-testing-support-api"
    property "sonar.projectKey", "com.github.hmcts:idam-testing-support-api"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.exclusions", "**/uk/gov/hmcts/cft/idam/api/v2/common/model/**," +
      "**/uk/gov/hmcts/cft/idam/testingsupportapi/config/**," +
      "**/uk/gov/hmcts/cft/idam/testingsupportapi/controllers/**," +
      "**/uk/gov/hmcts/cft/idam/api/v2/**," +
      "**/uk/gov/hmcts/cft/idam/api/v0/**,"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

ext {
  reformLoggingVersion = "5.1.9"
  log4JVersion = "2.17.1"
  springCloudVersion = "2021.0.1"
  flywayVersion = "8.5.5"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
  dependencies {
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '31.1-jre') {
      entry 'guava'
    }
  }
}

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.4'
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLoggingVersion
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: reformLoggingVersion
  implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: '0.1.1'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion
  implementation 'uk.gov.service.notify:notifications-java-client:3.17.3-RELEASE'
  implementation group: 'org.flywaydb', name: 'flyway-core', version: flywayVersion
  implementation 'org.postgresql:postgresql:42.3.6'
  implementation 'org.apache.commons:commons-collections4:4.4'
  implementation 'org.springframework.boot:spring-boot-starter-activemq'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.13.2'
  implementation 'com.google.guava:guava'

  // Old Testing Support API
  implementation group: 'com.github.hmcts', name: 'idam-api-spec', version: '3.6.0', {
    exclude group: 'io.springfox'
  }

  compileOnly group: 'org.projectlombok', name: 'lombok'
  annotationProcessor group: 'org.projectlombok', name: 'lombok'

  testImplementation(platform('org.junit:junit-bom:5.8.2'))
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.mockito:mockito-core:4.4.0'

  functionalTestImplementation sourceSets.main.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
}

mainClassName = 'uk.gov.hmcts.cft.idam.testingsupportapi.Application'

bootJar {
  getArchiveFileName().set(provider
    {
      'idam-testing-support-api.jar'
    })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

bootRun {
  systemProperties = System.properties
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
